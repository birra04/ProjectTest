<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddFavorites" xml:space="preserve">
    <value>Add Favorites</value>
  </data>
  <data name="BirthDay" xml:space="preserve">
    <value>Birthday</value>
  </data>
  <data name="BirthdayRequired" xml:space="preserve">
    <value>Birthday is required</value>
  </data>
  <data name="ByAlphabeticAscending" xml:space="preserve">
    <value>By Alphabetic Ascending</value>
  </data>
  <data name="ByAlphabeticDescending" xml:space="preserve">
    <value>By Alphabetic Descending</value>
  </data>
  <data name="ByDateAscending" xml:space="preserve">
    <value>By Date Ascending</value>
  </data>
  <data name="ByDateDescending" xml:space="preserve">
    <value>By Date Descending</value>
  </data>
  <data name="ByRanking" xml:space="preserve">
    <value>By Ranking</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ContactBirthday" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="ContactDeleteSuccessfull" xml:space="preserve">
    <value>The contact has been deleted successfull.</value>
  </data>
  <data name="ContactError" xml:space="preserve">
    <value>There was an error saving the contact.</value>
  </data>
  <data name="ContactList" xml:space="preserve">
    <value>Contact List</value>
  </data>
  <data name="ContactName" xml:space="preserve">
    <value>Contact Name ...</value>
  </data>
  <data name="ContactPhone" xml:space="preserve">
    <value>Phone:</value>
  </data>
  <data name="ContactSaveError" xml:space="preserve">
    <value>There was an error saving the contact.</value>
  </data>
  <data name="ContactSaveSuccessfull" xml:space="preserve">
    <value>The contact has been saved successfull.</value>
  </data>
  <data name="ContactType" xml:space="preserve">
    <value>Contact Type</value>
  </data>
  <data name="ContactTypeRequired" xml:space="preserve">
    <value>Contact type is required</value>
  </data>
  <data name="CreateContact" xml:space="preserve">
    <value>Create Contact</value>
  </data>
  <data name="CreateReservation" xml:space="preserve">
    <value>Create Reservation</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteContact" xml:space="preserve">
    <value>Delete Contact</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescriptionRequired" xml:space="preserve">
    <value>Description is required</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditContact" xml:space="preserve">
    <value>Edit Contact</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorText" xml:space="preserve">
    <value>An error occurred while processing your request.</value>
  </data>
  <data name="Favorite" xml:space="preserve">
    <value>Favorite</value>
  </data>
  <data name="FutureDate" xml:space="preserve">
    <value>The birthday can not be a future date.</value>
  </data>
  <data name="InfoText" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="PhoneNumberNotMatch" xml:space="preserve">
    <value>Phone Number does not match with the format</value>
  </data>
  <data name="PleaseJustLetters" xml:space="preserve">
    <value>Please write just letters</value>
  </data>
  <data name="Ranking" xml:space="preserve">
    <value>Ranking</value>
  </data>
  <data name="ReservationDate" xml:space="preserve">
    <value>Reservation date</value>
  </data>
  <data name="ReservationDeleteSuccessfull" xml:space="preserve">
    <value>The reservation has been deleted successfull.</value>
  </data>
  <data name="ReservationEdit" xml:space="preserve">
    <value>Edit Reservation</value>
  </data>
  <data name="ReservationList" xml:space="preserve">
    <value>Reservations List</value>
  </data>
  <data name="ReservationSaveError" xml:space="preserve">
    <value>There was an error saving the reservation.</value>
  </data>
  <data name="ReservationSaveSuccessfull" xml:space="preserve">
    <value>The reservation has been saved successfull.</value>
  </data>
  <data name="SortBy" xml:space="preserve">
    <value>Sort by ...</value>
  </data>
</root>